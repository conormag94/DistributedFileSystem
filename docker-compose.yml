version: '2.1'

services:

  ################
  # File Service #
  ################
  file-service:
    container_name: file-service
    build: ./file_service
    volumes:
      - './file_service:/usr/src/app'
    ports:
      - 5001:5000 # expose ports - HOST:CONTAINER
    environment:
      - APP_SETTINGS=project.config.DevelopmentConfig
    
  file-service-2:
    container_name: file-service-2
    build: ./file_service
    volumes:
      - './file_service:/usr/src/app'
    ports:
      - 5002:5000 # expose ports - HOST:CONTAINER
    environment:
      - APP_SETTINGS=project.config.DevelopmentConfig

  ################
  # Lock Service #
  ################
  lock-db:
    container_name: lock-db
    build: ./lock_service/project/db
    ports:
        - 5435:5432  # expose ports - HOST:CONTAINER
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: exit 0

  lock-service:
    container_name: lock-service
    build: ./lock_service
    volumes:
      - './lock_service:/usr/src/app'
    ports:
      - 5003:5000 # expose ports - HOST:CONTAINER
    environment:
      - APP_SETTINGS=project.config.DevelopmentConfig
      - DATABASE_URL=postgres://postgres:postgres@lock-db:5432/lock_dev
    depends_on:
      lock-db:
        condition: service_healthy
    links:
      - lock-db

  #####################
  # Security Service  #
  #####################
  security-db:
    container_name: security-db
    build: ./security_service/project/db
    ports:
        - 5436:5432  # expose ports - HOST:CONTAINER
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: exit 0

  security-service:
    container_name: security-service
    build: ./security_service
    volumes:
      - './security_service:/usr/src/app'
    ports:
      - 5004:5000 # expose ports - HOST:CONTAINER
    environment:
      - APP_SETTINGS=project.config.DevelopmentConfig
      - DATABASE_URL=postgres://postgres:postgres@security-db:5432/security_dev
    depends_on:
      security-db:
        condition: service_healthy
    links:
      - security-db

  #####################
  # Directory Service #
  #####################
  directory-db:
    container_name: directory-db
    build: ./directory_service/project/db
    ports:
        - 5434:5432  # expose ports - HOST:CONTAINER
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: exit 0

  directory-service:
    container_name: directory-service
    build: ./directory_service
    volumes:
      - './directory_service:/usr/src/app'
    ports:
      - 5000:5000 # expose ports - HOST:CONTAINER
    environment:
      - APP_SETTINGS=project.config.DevelopmentConfig
      - DATABASE_URL=postgres://postgres:postgres@directory-db:5432/directory_dev
      - FS1_URL=http://file-service:5000   # Can refer to service by name instead of ip
      - FS2_URL=http://file-service-2:5000 # Docker figures out the routing
      - LOCK_URL=http://lock-service:5000
      - SECURITY_URL=http://security-service:5000
    depends_on:
      directory-db:
        condition: service_healthy
    links:
      - directory-db
      - file-service
      - file-service-2
      - lock-service
      - security-service
